{"version":3,"sources":["components/Country/Country.js","components/Countries/Countries.js","App.js","reportWebVitals.js","index.js"],"names":["Country","props","country","name","capital","flags","population","className","src","alt","Countries","useState","countries","setCountries","useEffect","fetch","then","res","json","data","map","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sRAeeA,EAZC,SAACC,GAAW,IAAD,EACoBA,EAAMC,QAA1CC,EADgB,EAChBA,KAAMC,EADU,EACVA,QAASC,EADC,EACDA,MAAOC,EADN,EACMA,WAC7B,OACI,sBAAKC,UAAU,oBAAf,UACI,qBAAKC,IAAKH,EAAM,GAAII,IAAI,KACxB,6BAAKN,IACL,8CAAiBC,KACjB,iDAAoBE,SCUjBI,G,MAhBG,WAAO,IAAD,EACgBC,mBAAS,IADzB,mBACZC,EADY,KACDC,EADC,KAOpB,OALAC,qBAAU,WACNC,MAAM,oCACDC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAAI,OAAIN,EAAaM,QAChC,IAEC,qBAAKZ,UAAU,iBAAf,SAEQK,EAAUQ,KAAI,SAAAlB,GAAO,OAAI,cAAC,EAAD,CAASA,QAASA,WCH5CmB,MARf,WACE,OACE,qBAAKd,UAAU,MAAf,SACE,cAAC,EAAD,OCMSe,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBR,MAAK,YAAkD,IAA/CS,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.2dfb8d81.chunk.js","sourcesContent":["import React from 'react';\nimport './Country.css'\n\nconst Country = (props) => {\n    const {name, capital, flags, population} = props.country;\n    return (\n        <div className=\"country-container\">\n            <img src={flags[0]} alt=\"\"/>\n            <h3>{name}</h3>\n            <p>Capital is : {capital}</p>\n            <p>Polpulation is: {population}</p>\n        </div>\n    );\n};\n\nexport default Country;","import React, { useState, useEffect } from 'react';\nimport Country from '../Country/Country';\nimport './Countries.css';\n\nconst Countries = () => {\n    const [ countries, setCountries ] = useState([]);\n    useEffect(() => {\n        fetch('https://restcountries.com/v2/all')\n            .then(res => res.json())\n            .then(data => setCountries(data));\n    }, [])\n    return (\n        <div className=\"countries-grid\">\n            {\n                countries.map(country => <Country country={country}></Country>)\n            }\n        </div>\n    );\n};\n\nexport default Countries;","import './App.css';\nimport Countries from './components/Countries/Countries';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Countries></Countries>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}